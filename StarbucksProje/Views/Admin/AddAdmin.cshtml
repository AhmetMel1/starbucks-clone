@using EntityLayer
@model Admin
@{
    ViewData["Title"] = "AddAdmin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string[] adminTypes = { "Admin", "CEO", "Manager", "Assistant Manager", "Secretary" };
}


<div class="col-11 grid-margin stretch-card">
    <div class="card m-5" style="box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;">
        <div class="card-body">
        <h4 class="card-title">Admin</h4>
        <p class="card-description">
            Admin Add
        </p>
        <form class="forms-sample" action="/Admin/AddAdmin" method="post" enctype="multipart/form-data">
            <div class="form-group">
                    <label>First Name</label>
                    <input type="text" class="form-control" placeholder="First Name" name="adminFirstName" value="@Model.adminFirstName">
                    @Html.ValidationMessage("adminFirstName","",new{@class="text-danger"})
            </div>
            <div class="form-group">
                    <label>Last Name</label>
                    <input type="text" class="form-control" placeholder="Last Name" name="adminLastName" value="@Model.adminLastName">
                    @Html.ValidationMessage("adminLastName","",new{@class="text-danger"})
            </div>
            <div class="form-group">
                    <label>Mail</label>
                    <input type="text" class="form-control" placeholder="Mail" name="adminMail" value="@Model.adminMail">
                    @Html.ValidationMessage("adminMail","",new{@class="text-danger"})
            </div>
            <div class="form-group">
                    <label>Password</label>
                    <input type="text" class="form-control" placeholder="Password" name="adminPassword" value="@Model.adminPassword">
                    @Html.ValidationMessage("adminPassword","",new{@class="text-danger"})
            </div>
            <div class="form-group">
                    <label>Position</label>
                    <select class="form-control" name="adminType">
                        @for (int i = 0; i < adminTypes.Length; i++)
                        {
                            <option>@adminTypes[i]</option>
                        }
                    </select>
            </div>
                <div class="form-group">
                    <label>Birthday</label>
                    <input type="date" class="form-control" placeholder="Birthday" name="adminBirthday" value="@DateTime.Today.ToString("yyyy-MM-dd")">
                    @Html.ValidationMessage("adminBirthday","",new{@class="text-danger"})
                </div>
                <div class="form-group">
                    <label>Image</label>
                    <input type="file" class="form-control" name="imgFile">
                    @Html.ValidationMessage("imgFile","",new{@class="text-danger"})
                </div>
                <div class="form-group">
                    <label>Gender</label>
                    <select class="form-control" name="adminGender">
                        <option value="False">Women</option>
                        <option value="True">Men</option>
                    </select>
                </div>
            <div class="form-group">
                <label for="exampleSelectGender">Status</label>
                <select class="form-control" name="adminDeleted">
                    <option value="False">Active</option>
                    <option value="True">Pasive</option>
                </select>
            </div>
            <button type="submit" class="btn btn-inverse-info me-2">
                <i class="mdi mdi-file-check btn-icon-prepend"></i>
                Submit
            </button>
                <a class="btn btn-inverse-secondary" type="reset" href="/Admin/admin-list">Cancel</a>
        </form>
    </div>
</div>
</div>

